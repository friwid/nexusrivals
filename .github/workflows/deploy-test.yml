name: Workflow - Deploy

on: 
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment to run tests against'
        type: environment
        required: true    

env:
  GH_TOKEN: ${{ github.token }}
  TARGET_ENV: ${{ github.event.inputs.env }}  

jobs: 
  call-build-client-workflow:
    name: Job - Call Build Client Workflow
    uses: ./.github/workflows/build-client.yml
    
  call-build-server-workflow:
    name: Job - Call Build Server Workflow
    uses: ./.github/workflows/build-server.yml    
    
  deploy:
    name: Job - Deploy
    runs-on: ubuntu-latest
    needs: [call-build-client-workflow, call-build-server-workflow]
    environment: 
      name: $TARGET_ENV
      
    steps:     
    - name: Job - Check environment
      run: |
        if [[ "$TARGET_ENV" == "Test" || "$TARGET_ENV" == "Live" ]]; then
          echo "Deploying to $TARGET_ENV server..."
        else
          echo "Unknown environment - $TARGET_ENV"
        exit 1
        fi
        
    - name: Step - Download server build artifacts
      uses: actions/download-artifact@v4
      with:
        name: server-build
        path: .
        
    - name: Step - Download client build artifacts
      uses: actions/download-artifact@v4
      with:
        name: client-build
        path: ./packages/client/dist/
        
    - name: Step - Download client package.json artifacts
      uses: actions/download-artifact@v4
      with:
        name: client-package-json
        path: ./packages/client/
        
    - name: Step - Deploy to server
      uses: easingthemes/ssh-deploy@main
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        ARGS: "-rlgoDzvc -i"
        SOURCE: "."
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        TARGET: ${{ secrets.TARGET_DIRECTORY }}
        EXCLUDE: "" 
        SCRIPT_BEFORE: |
          kill -15 bun
          rm -rf packages node_modules package.json bun.lockb
        SCRIPT_AFTER: |
          echo $RSYNC_STDOUT
          cd ${{ secrets.TARGET_DIRECTORY }}
          ~/.bun/bin/bun install
          bun packages/server/src/server.js
